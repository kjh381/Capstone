@model SARDT.Models.Member
@{
    ViewBag.Title = "ManageUserRoles";
}

<h2>Manage User Roles</h2>
@Html.ActionLink("Manage User Role", "ManageUserRoles")  
<hr />




<h2>Give Users Moderator Privileges</h2>

@using (Html.BeginForm("RoleAddToUser", "Auth"))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    
<p>

    User Name : @Html.DropDownList("UserName", (IEnumerable<SelectListItem>)ViewBag.NoModUsers)
    Privileges : @Html.DropDownList("RoleName", (IEnumerable<SelectListItem>)ViewBag.Roles)    
</p>

    <input type="submit" value="Grant Moderator Privileges" />
}
<hr />
<h3>Get Roles for a User</h3>
@using (Html.BeginForm("GetRoles", "Auth"))
{
    @Html.AntiForgeryToken()
    <p>
        UserName : @Html.DropDownList("UserName", (IEnumerable<SelectListItem>)ViewBag.AllUsers)
        <input type="submit" value="Get Roles for this User" />
    </p>
}
@if (ViewBag.RolesForThisUser != null)
{
    <div style="background-color:yellow;">
        <h3>Roles for this User</h3>
        <ol>
            @foreach (string s in ViewBag.RolesForThisUser)
            {
                <li>@s</li>
            }
        </ol>
    </div>
}

<hr />
<h3>Take Moderator Privilege from User</h3>

@using (Html.BeginForm("Delete", "Auth"))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <p>
        User Name : @Html.DropDownList("UserName", (IEnumerable<SelectListItem>)ViewBag.ModUsers)
        Role Name : @Html.DropDownList("RoleName", (IEnumerable<SelectListItem>)ViewBag.Roles)
    </p>

    <input type="submit" value="Remove Moderator Privileges" />
}